Zookeeper 	->	zookeeper manages brokers. It helps in performing leader elections for partitions.
				Zookeeper sends notifications to kafka in case of any changes.
				Kafka can't work without zookeper.
				zookeepers by design works with odd numbers of servers brokers.
				Zookeper has a leader(handle writes) and the rest of the servers are followers(handle reads)
Brokers 	->	Each kafka broker is known as bootstrap server. That means you need to connect to only one broker and you will be
		   		connected to entire kafka cluster. Kafka client i.e either consumer / producer connects to bootstrap server and it will
		   		get whole information about kafka cluster.
Topic 		-> 	Topic can have multiple partitions i.e P1, P2, P3. If there are more than one broker available, then each partition will
	 			will reside in one broker. If there are more partitions than brokers, then one broker may have more than one partition.
Partition 	-> 	In addition to what is stated above, producer will know about all the partitions via bootstrap server
Replication Factor	
ISR
Consumers   ->	each partition has offsets. starting from 0 till infinity. data at offset 3 can't be stored before 2. Each consumer
				has consumer offset which states till what point consumer has read the data. Consumer offsets are stored in kafka
				topics.
Consumer Groups
